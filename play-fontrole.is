/// @ 0.13.1
### {
    name: "フォント10連ガチャ！"
    author: "zawa-ch."
    version: "1.0.0"
    description: "文字通りフォントの10連ガチャです。登録フォント数151、排出確率はN60%,R25%,SR10%,SSR5%(レアリティ選定基準は独断と偏見によるもの)"
    license: {
        name: "MIT License"
        href: "http://www.opensource.org/licenses/mit-license.php"
    }
}
let HASHTAG = "#フォント10連ガチャ"
let lottery_data = {
    common: {
        name: "N"
        weight: 60
        fonts: [
            "ＭＳ ゴシック"
            "ＭＳ Ｐゴシック"
            "ＭＳ 明朝"
            "ＭＳ Ｐ明朝"
            "MS UIGothic"
            "メイリオ"
            "arial"
            "courier"
            "courier new"
            "Century Gothic"
            "HGゴシック"
            "HG行書体"
            "HG教科書体"
            "HG明朝"
            "HG創英角ポップ体"
            "HG創英角ゴシックUB"
            "HG正楷書体PRO"
            "HG丸ゴシックPRO"
            "impact"
            "Monotype Corsiva"
            "Noto Mono"
            "Noto Sans"
            "Noto Serif"
            "OCRB"
            "Segoe UI"
            "Segoe WP"
            "Symbol"
            "Tahoma"
            "Times New Roman"
            "Verdana"
            "Webdings"
            "Wingdings"
            "Wingdings2"
            "Wingdings3"
            "Yu Gothic UI"
        ]
    }

    uncommon: {
        name: "R"
        weight: 25
        fonts: [
            "フロップデザイン"
            "やさしさアンチック"
            "やさしさゴシック"
            "超極細ゴシック"
            "しねきゃぷしょん"
            "あずきフォント"
            "Droid Sans"
            "Droid Serif"
            "DejaVu Sans"
            "Digital-7 mono"
            "Eferena"
            "FreeMono"
            "FreeSans"
            "FreeSerif"
            "Gargi"
            "Garuda"
            "Gentium"
            "Greetings"
            "はらませにゃんこ"
            "東青梅ゴシック"
            "imagine YOKOHAMA"
            "なごみ極細ゴシック"
            "IPAexゴシック"
            "IPAex明朝"
            "IPAゴシック"
            "IPA明朝"
            "IPAPゴシック"
            "IPAP明朝"
            "Kalimati"
            "Likhan"
            "Loma"
            "Meera"
            "Membra"
            "Mgen+"
            "Migmix"
            "Mitra Mono"
            "M+ font"
            "Nakula"
            "NanumGothic"
            "NanumMyeongjo"
            "Nimbus Mono"
            "Roboto"
            "Liberation Mono"
            "Liberation Sans"
            "Liberation Sans Narrow"
            "Liberation Serif"
            "Oxygen Mono"
            "Oxygen-Sans"
            "Samanata"
            "Symbola"
            "たぬき油性マジック"
            "Techno"
            "Waree"
            "WIFI"
        ]
    }

    rare: {
        name: "SR"
        weight: 10
        fonts: [
            "Adlanta"
            "Champagne & Limousines"
            "Cherry"
            "Cilica"
            "DengXian"
            "Dyuthi"
            "ElectroHarmonix"
            "espresso Dolce"
            "Feel Me"
            "Gabato"
            "Goudy Old Style"
            "GiantRobotArmy"
            "ヒラギノ明朝"
            "本明朝"
            "本明朝-Book"
            "gibi"
            "刻ゴシック"
            "刻明朝フォント"
            "Laksaman"
            "Line"
            "modern squared"
            "Napo"
            "Open Sans"
            "Purisa"
            "Rage"
            "Sawasdee"
            "Source Han Code JP"
            "Source Sans Pro"
            "Shelter Code"
            "Space Theme"
            "Squared"
            "秀英初号明朝"
            "Takao Pゴシック"
            "Tlwg Typist"
            "Tlwg Typo"
            "凸版文久明朝"
            "Vemana2000"
            "にゃしぃフォント改二"
        ]
    }

    epic: {
        name: "SSR"
        weight: 5
        fonts: [
            "拡張にゃしいフォント"
            "Artypa"
            "Asai Analogue"
            "coffee icons"
            "筑紫A丸ゴシック"
            "筑紫B丸ゴシック"
            "Fallkhar Runes"
            "Farewell"
            "First Shine"
            "Golden Ratio"
            "HEXAGON cup font"
            "Kalapi"
            "Madeon Runes"
            "modern"
            "Normograph"
            "OCR A Extended"
            "Pixelig Cursief"
            "Restroom"
            "Semi-Casual"
            "SkateC"
            "small font"
            "Susanna"
            "Ubuntu"
            "ZESSTYPE GRAFIKA"
        ]
    }
}

@on_draw(result) {
    Ui:render([
        Ui:C:container({
            children: [
                Ui:C:mfm({ text: result.text })
                Ui:C:mfm({ text: `<small><small>ID: {result.id}</small></small>` })
            ]
        })
        Ui:C:container({
            align: 'center'
            children: [
                Ui:C:buttons({
                    buttons: [
                        {
                            text: "引きなおす"
                            onClick: @(){ draw(Util:uuid() on_draw) }
                        }
                    ]
                })
                Ui:C:postFormButton({
                    text: "投稿する"
                    rounded: true
                    primary: true
                    form: {
                        text: `{result.text}{Str:lf}{HASHTAG}{Str:lf}{THIS_URL}`
                    }
                })
            ]
        })
    ])
}

let weight_subtotal = {
    common: lottery_data.common.weight
    uncommon: lottery_data.common.weight + lottery_data.uncommon.weight
    rare: lottery_data.common.weight + lottery_data.uncommon.weight + lottery_data.rare.weight
    epic: lottery_data.common.weight + lottery_data.uncommon.weight + lottery_data.rare.weight + lottery_data.epic.weight
}
let weight_total = weight_subtotal.epic
@get_category(rnd_f) {
    let value = rnd_f(0 weight_total)
    if value < weight_subtotal.common { lottery_data.common }
    elif value < weight_subtotal.uncommon { lottery_data.uncommon }
    elif value < weight_subtotal.rare { lottery_data.rare }
    elif value < weight_subtotal.epic { lottery_data.epic }
    else {
        <: "error: reached unreachable code."
        null
    }
}

@get_item(cat rnd_f) {
    let cl = cat.fonts.len
    let i = rnd_f(0 cl)
    cat.fonts[i]
}

@draw(id drawcallback) {
    var text = `フォント10連ガチャ結果！{Str:lf}`
    var data = []
    let random = Math:gen_rng(`{USER_ID}:{id}`)
    for let i, 10 {
        let cat = get_category(random)
        let item = get_item(cat random)
        data.push({ category: cat.name, item: item })
        text = `{text}[{cat.name}] {item}{Str:lf}`
    }
    drawcallback({ id: id, text: text })
}

draw(Util:uuid() on_draw)
